[{"/home/arshavir/Documents/test-app/src/index.js":"1","/home/arshavir/Documents/test-app/src/App.js":"2","/home/arshavir/Documents/test-app/src/reportWebVitals.js":"3","/home/arshavir/Documents/test-app/src/components/index.js":"4","/home/arshavir/Documents/test-app/src/components/EventItem/index.js":"5","/home/arshavir/Documents/test-app/src/pages/EventList/index.js":"6","/home/arshavir/Documents/test-app/src/config/index.js":"7","/home/arshavir/Documents/test-app/src/services/SocketIoService.js":"8","/home/arshavir/Documents/test-app/src/context/Actions.js":"9","/home/arshavir/Documents/test-app/src/context/index.js":"10","/home/arshavir/Documents/test-app/src/context/Reducer.js":"11"},{"size":478,"mtime":1607174765074,"results":"12","hashOfConfig":"13"},{"size":538,"mtime":1607263584125,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1607173472375,"results":"15","hashOfConfig":"13"},{"size":62,"mtime":1607174672255,"results":"16","hashOfConfig":"13"},{"size":1196,"mtime":1607267649530,"results":"17","hashOfConfig":"13"},{"size":4046,"mtime":1607269184104,"results":"18","hashOfConfig":"13"},{"size":81,"mtime":1607273837709,"results":"19","hashOfConfig":"13"},{"size":0,"mtime":1607203801382,"results":"20","hashOfConfig":"13"},{"size":349,"mtime":1607261970939,"results":"21","hashOfConfig":"13"},{"size":441,"mtime":1607263995795,"results":"22","hashOfConfig":"13"},{"size":1801,"mtime":1607267015271,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"eo2ylm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"/home/arshavir/Documents/test-app/src/index.js",[],["48","49"],"/home/arshavir/Documents/test-app/src/App.js",[],"/home/arshavir/Documents/test-app/src/reportWebVitals.js",[],"/home/arshavir/Documents/test-app/src/components/index.js",[],"/home/arshavir/Documents/test-app/src/components/EventItem/index.js",[],"/home/arshavir/Documents/test-app/src/pages/EventList/index.js",["50"],"import { useEffect } from 'react';\nimport { EventItem } from '../../components';\nimport { Search as SearchIcon } from 'react-bootstrap-icons'\nimport { useStateValue } from '../../context';\nimport config from '../../config';\nimport { toast } from 'react-toastify';\nimport { io } from 'socket.io-client';\nimport {\n    Button,\n    Alert,\n    InputGroup,\n    ListGroup,\n    FormControl,\n    ButtonGroup,\n    Container,\n    Row,\n    Col\n} from 'react-bootstrap'\nimport {\n    filterEvents,\n    pauseEventsListening,\n    resumeEventsListening,\n    setEvents\n} from '../../context/Actions';\n\n// todo create socket provider\nconst socket = io(config.apiBase);\n\nconst EventList = () => {\n\n    const [state, dispatch] = useStateValue();\n\n    useEffect(() => {\n        connect()\n    }, [])\n\n    const connect = async () => {\n\n        socket.on('error', () => {\n            toast.info('Sorry, there seems to be an issue with the connection!')\n        })\n\n        socket.on('connect', () => {\n            toast.info('Socket connected')\n            socket.on(config.channel, (data) => {\n                dispatch(setEvents(JSON.parse(data)))\n            });\n        });\n\n        socket.on('disconnect', () => {\n            toast.info('Socket disconnected')\n        });\n\n    }\n\n    const renderEventList = () =>\n        <ListGroup variant=\"flush\">\n            {state.events.slice(0, 8).map((item, index) => <EventItem key={index} event={item} />)}\n        </ListGroup>\n\n    const renderEmptyMsg = () =>\n        <div className=\"text-center\">\n            <div>Not Events yet</div>\n        </div>\n\n    const handleResumeEventsClick = () => {\n        socket.connect()\n        dispatch(resumeEventsListening());\n    }\n\n    const handlePauseEventsClick = () => {\n        socket.disconnect()\n        dispatch(pauseEventsListening());\n    }\n\n    const handleSearchInput = (e) => {\n        dispatch(filterEvents(e.target.value))\n    }\n\n    return (\n        <div>\n            <Container>\n                <Row className=\"mt-3 \">\n                    <Col>\n                        <Alert variant=\"primary\">\n                            <InputGroup>\n                                <ButtonGroup aria-label=\"Basic example\">\n                                    <Button variant={state.isEventsOnLive ? 'primary' : 'secondary'}\n                                        onClick={() => handleResumeEventsClick()}\n                                        disabled={state.isEventsOnLive}\n                                    >\n                                        Live\n                                    </Button>\n                                    <Button variant={state.isEventsOnLive ? 'secondary' : 'primary'}\n                                        onClick={() => handlePauseEventsClick()}\n                                        disabled={!state.isEventsOnLive}\n                                    >\n                                        Pause\n                                    </Button>\n                                </ButtonGroup>\n                                <InputGroup.Prepend className=\"ml-3\">\n                                    <InputGroup.Text id=\"btnGroupAddon\">\n                                        <SearchIcon />\n                                    </InputGroup.Text>\n                                </InputGroup.Prepend>\n                                <FormControl\n                                    type=\"text\"\n                                    onChange={handleSearchInput}\n                                    placeholder=\"Type to search...\"\n                                    aria-label=\"Recipient's username\"\n                                    aria-describedby=\"basic-addon2\"\n                                />\n                            </InputGroup>\n                        </Alert>\n                    </Col>\n                </Row>\n\n                {state.events.length\n                    ? renderEventList()\n                    : renderEmptyMsg()\n                }\n\n            </Container>\n        </div>\n    )\n}\n\nexport default EventList","/home/arshavir/Documents/test-app/src/config/index.js",[],"/home/arshavir/Documents/test-app/src/services/SocketIoService.js",[],"/home/arshavir/Documents/test-app/src/context/Actions.js",[],"/home/arshavir/Documents/test-app/src/context/index.js",[],"/home/arshavir/Documents/test-app/src/context/Reducer.js",[],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":35,"column":8,"nodeType":"57","endLine":35,"endColumn":10,"suggestions":"58"},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'connect'. Either include it or remove the dependency array.","ArrayExpression",["61"],"no-global-assign","no-unsafe-negation",{"desc":"62","fix":"63"},"Update the dependencies array to be: [connect]",{"range":"64","text":"65"},[773,775],"[connect]"]